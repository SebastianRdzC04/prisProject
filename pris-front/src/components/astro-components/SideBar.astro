---
// Sidebar.astro

interface Props {
    userName?: string; // Hacemos la prop opcional
}

// Valor predeterminado si no se proporciona userName
const { userName = "Cargando..." } = Astro.props;

---

<aside class="h-[calc(100vh-64px)] w-56 bg-white shadow-lg fixed left-0 top-16 z-10">
    <div class="flex flex-col h-full">

        <!-- Navigation Menu -->
        <nav class="flex-1 overflow-y-auto py-4">
            <ul class="space-y-2 px-4">
                <li>
                    <a href="/home" class="flex items-center p-3 text-gray-800 hover:bg-gray-100 rounded-lg transition-colors group">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-gray-600 group-hover:text-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                        </svg>
                        <span class="font-medium">Inicio</span>
                    </a>
                </li>
                <li>
                    <a href="/cites" class="flex items-center p-3 text-gray-800 hover:bg-gray-100 rounded-lg transition-colors group">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-gray-600 group-hover:text-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        <span class="font-medium">Citas</span>
                    </a>
                </li>
                <li>
                    <a href="/patients" class="flex items-center p-3 text-gray-800 hover:bg-gray-100 rounded-lg transition-colors group">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-gray-600 group-hover:text-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        <span class="font-medium">Pacientes</span>
                    </a>
                </li>

                <li>
                    <a href="/calendar" class="flex items-center p-3 text-gray-800 hover:bg-gray-100 rounded-lg transition-colors group">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-gray-600 group-hover:text-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        <span class="font-medium">Calendario</span>
                    </a>
                </li>
                <li>
                    <a href="/" class="flex items-center p-3 text-gray-800 hover:bg-gray-100 rounded-lg transition-colors group">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-3 text-gray-600 group-hover:text-black" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                        </svg>
                        <span class="font-medium">Configuracion</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Footer modificado -->
        <div class="p-4 border-t border-gray-200">
            <div class="flex items-center justify-between">
                <div class="flex items-center">
                    <div class="h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center text-black">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p id="userNameDisplay" class="text-sm font-medium text-black">{userName}</p>
                        <p class="text-xs text-gray-500">Administrator</p>
                    </div>
                </div>
                <div class="relative">
                    <button id="logoutBtn" class="text-gray-500 hover:text-red-500 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                        </svg>
                    </button>
                    <div id="logoutConfirm" class="hidden absolute bottom-full right-0 mb-2 w-36 p-2 bg-white shadow-lg rounded-md border border-gray-200 text-xs">
                        <p class="mb-2 text-center">¿Cerrar sesión?</p>
                        <div class="flex justify-between">
                            <button id="confirmLogout" class="bg-red-500 text-white px-2 py-1 rounded-sm hover:bg-red-600">Sí</button>
                            <button id="cancelLogout" class="bg-gray-200 px-2 py-1 rounded-sm hover:bg-gray-300">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</aside>


<script>
    // Script existente para el logout
    document.addEventListener('DOMContentLoaded', () => {
        const logoutBtn = document.getElementById('logoutBtn');
        const logoutConfirm = document.getElementById('logoutConfirm');
        const confirmLogout = document.getElementById('confirmLogout');
        const cancelLogout = document.getElementById('cancelLogout');

        if (logoutBtn && logoutConfirm && confirmLogout && cancelLogout) {
            // Código de logout existente...
            logoutBtn.addEventListener('click', (e) => {
                e.stopPropagation();
                logoutConfirm.classList.toggle('hidden');
            });

            cancelLogout.addEventListener('click', () => {
                logoutConfirm.classList.add('hidden');
            });

            confirmLogout.addEventListener('click', () => {
                localStorage.removeItem('token');
                window.location.href = '/';
            });

            document.addEventListener('click', (event) => {
                // Corregimos los errores de tipo aquí
                if (event.target instanceof Node) {
                    if (!logoutConfirm.contains(event.target) &&
                        !logoutBtn.contains(event.target) &&
                        !logoutConfirm.classList.contains('hidden')) {
                        logoutConfirm.classList.add('hidden');
                    }
                }
            });
        }

        // Nuevo código para cargar el nombre de usuario
        loadUserData();
    });

    // Función para decodificar JWT
    function parseJwt(token) {
        try {
            const base64Url = token.split('.')[1];
            const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
            const payload = decodeURIComponent(atob(base64).split('').map(function(c) {
                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
            }).join(''));

            return JSON.parse(payload);
        } catch (e) {
            console.error('Error decodificando token:', e);
            return null;
        }
    }

    // Función para cargar los datos del usuario
    async function loadUserData() {
        const userNameDisplay = document.getElementById('userNameDisplay');
        if (!userNameDisplay) return;

        const token = localStorage.getItem('token');
        if (!token) {
            console.error('No se encontró token de autenticación');
            return;
        }

        // Decodificar el token para obtener el ID
        const tokenData = parseJwt(token);
        if (!tokenData || !tokenData.id) {
            console.error('Token inválido o sin ID');
            return;
        }

        try {
            // Hacer la petición a la API
            const response = await fetch(`https://apipris.kysedomi.lat/users/${tokenData.id}/personal_data`);

            if (!response.ok) {
                throw new Error(`Error: ${response.status}`);
            }


            const userData = await response.json();

            console.log('userData', userData);

            // Actualizar el nombre en la interfaz
            if (userData && userData.personal_data) {
                const { first_name, last_name } = userData.personal_data;
                const fullName = `${first_name || ''} ${last_name || ''}`.trim();

                if (fullName) {
                    userNameDisplay.textContent = fullName;
                }
            }
        } catch (error) {
            console.error('Error al cargar datos del usuario:', error);
        }
    }
</script>